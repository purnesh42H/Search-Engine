1641 a us of fast and slow memori in list process languag a scheme is describ which permit a substanti increas in memori space util to store list structur data it consist in reduc to on level a nonhomogen store compos of fast core and slow disk or drum memori the space avail in slow memori is divid into page each contain a given number of machin word the reduct to a on level memori is perform by a program which leav the most often call page in the fast memori when a new page from slow store is request the page in core have the longest period of inact is transfer back to the slow store the complet scheme ha been implement in connect with a lisp embed into algol us an ibm 7044 with 32k of core memori and disk gain in memori space were about 100 fold as often happen in program applic the price of the addit space is comput time although the disk have an access time 10 4 time slower than core test indic that the actual slow down vari from 3 to 10 depend on the number of page avail in the fast store cacm februari 1967 cohen j ca670202 jb februari 28 1978 4 06 pm 1626 5 1641 1641 5 1641 1641 5 1641 1641 5 1641 1708 5 1641 1781 5 1641 1860 5 1641 2299 5 1641 123 6 1641 196 6 1641 919 6 1641 990 6 1641 1007 6 1641 1046 6 1641 1131 6 1641 1139 6 1641 1140 6 1641 1149 6 1641 1198 6 1641 1215 6 1641 1223 6 1641 1265 6 1641 1303 6 1641 1323 6 1641 1358 6 1641 1366 6 1641 1366 6 1641 1389 6 1641 1421 6 1641 1421 6 1641 1460 6 1641 1462 6 1641 1463 6 1641 1467 6 1641 1468 6 1641 1477 6 1641 1491 6 1641 1496 6 1641 1496 6 1641 1502 6 1641 1531 6 1641 1535 6 1641 1565 6 1641 1601 6 1641 1602 6 1641 1613 6 1641 1614 6 1641 1626 6 1641 1626 6 1641 1626 6 1641 1641 6 1641 1641 6 1641 1641 6 1641 1641 6 1641 1641 6 1641 1785 6 1641 1786 6 1641 1787 6 1641 1788 6 1641 205 6 1641 224 6 1641 249 6 1641 288 6 1641 316 6 1641 378 6 1641 381 6 1641 398 6 1641 11 6 1641 404 6 1641 410 6 1641 463 6 1641 464 6 1641 483 6 1641 3184 6 1641 3184 6 1641 3188 6 1641 584 6 1641 600 6 1641 680 6 1641 691 6 1641 763 6 1641 799 6 1641 